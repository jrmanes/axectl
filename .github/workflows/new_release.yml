---
name: Release
on:
  push:
    tags:
      - "v*"
jobs:
  build:
    name: Build Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ 1.17.x ]
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Install Go/ Build app
        with:
          path: artifacts/
        run: |
          goos=( "linux" "windows") 
          #goos=( "linux" "windows" "darwin")
          arch=( "386" "amd64" "arm64" )
          PROJECT_NAME=piktoctl
          mkdir -p ./artifacts
          for a in ${goos[@]}; do
              for i in ${arch[@]}; do
                if [[ "$a" == "darwin" && "$i" == "386" ]] || [[ "$a" == "windows" && "$i" == "arm64" ]];then
                  echo "Not allowed: $a $i"
            	else
            	  echo "Building: $a $i"
             	  CGO_ENABLED=0 GOOS=$a GOARCH=$i go build -o ./bin/$a/$i/${PROJECT_NAME}
            	  tar -czvf ./artifacts/${PROJECT_NAME}-$a-$i.tar.gz ./bin/$a/$i/${PROJECT_NAME}
            	fi
              done
          done
          ls -ltra ./artifacts/
      - name: Check artifacts
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          path: ./artifactsi/
        run: ls -ltra ./ && ls -ltra ./artifacts/
      - uses: ncipollo/release-action@v1
        with:
          path: artifacts/
          artifacts: ./artifacts/*.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
